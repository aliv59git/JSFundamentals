I. Лекция 18.05.2015 г.

 Лекция на Ивайло - JS1 Fundamentals

Странните неща в JS   ; 3 задачи за 4 часа. Нетипизиран динамичен език Трябва да свикнем с особеностите. 

В BG Coder са задачите. Как да дебъгваме JS. Туулсове. 

Типове данни и променливи. Все едно навсякъде имаме dynamic;

if, - else; switch; 

for-in loop; for-off loop;  Освен нормалните цикли for; while; do-while;

Масиви - По различни са. Масивът е смесица от масив, речник обект и стек, опашка. :Масивите трябва да разгледаме внимателно.

Функции - много важна част от JS. С тях работи всичко. 

Използване на обекти. динамично е всичко, но трябва да се внимава и да ги свикнем. 

Стринговете са подобни

75% 10 % 5 % 10 %;

един сайт за MDN  - от тук да четем и се готвим.  за изпита; WebPlatform също;   книги малката. 

Обикновено не се използва VS - за JS.   Препоръчва WebStorm;   SulimeText;    

Microsoft VisualSrudioCode също е добър за JS.   Да си  изтеглим WebStorm ; и да настроим и sublimeText  - от лекцията от 14 часа - на Дончо;

JavaScript Developmen Tools; 

JS директно се интерпретира, а не се компилира. Изпълнява се стъпка по стъпка. Едитва се и може да се види крайния резултат.  Не ни трябва друго, което да билдне кода. 

Тоол Batman.js - сериозна библиотека е. Повечето са openSorce  „

ASP Net Web application избираме за вижуъл студио. 
JS

Cloud9 - има JS в браузъра.  и  WebStorm - студентския вариант - Инсталираме го като 30 дневен трайъл После ще дадат лиценза за него. 

VS е удобно да се пише JS, ако имаме и нещо друго. 

WebStorm -> много е добър за JS. 

Дебъгване - то не се случва там, където пишем кода. но при JS е така. Основния начин за дебъгване е през браузъра. F12 - интересува ни Elements*/за html/ 

Sorces - това ни интересува. Могат да се слагат брейк-пойнт.- F10, F11, 

console.log() подобно на cw в C#; 

Друг начин е да сложим по средата на кода debugger; ще спре на него. 

Табът Console   там се появяват нещата. /в браузъра  console.log() Ще го ползваме често. Може да се изпълнява JS рън тайм - в момента можем да пишем и да тестваме дали нещо може да работи в самия JS. Те.е Конзолата е място където можем да тестваме някои неща. 

Chrome - яде много памет, но при затвяране - опреснява паметта. Кешира ; Ctrl-Shift-F   in Chrome; 

Firefox - developer tool Firebug for debugg.

In Opera - F12;

Safari, IE 10, IE9,

jshint, jslind - За правилно написан код проверяват. Тулсове за strong .    WebStorm има вградена проверка. 

JS Bind  рънва JS, CSS, html, 

JS Fiddle - също

JS Perf - казва доколко бързо работи нашия код. 

Продължение на лекцията Ивайло 

JS

След 2013 г. са стандартизирани нещата и всичко с JS работи. NodeJS - сървърна технология която тласка развиитето на JS. 

JS има странни неща, които трябва да разцъкаме. и да разберем. Това е езикът, с който манипулираме ДОМ дървото. 

- валидиране на форми

- всякакви неща, които юзъра прави

- можем да променяме картинки

- части от html да се появяват и изчезват. 

- изчислениям

- в Kendo .... различни функционалности.  Различни контролки. полезни неща, които с Има и доста безплатни неща. Страницата става по-забавна

- евенти

- манипулации на DOM дървото. 

и много други. Заявки, 

В html през <script></script> 

Може да се сложи в head - но бави страницата

но и надолу може в script таг да се пише JS.    

Правилното е всички стилове да са горе, а скриптовете да са долу в html-а. !!!!!

PageSpeed10 - тулс за измерване на бързодействието. 

Добре е всичкия JS да е в отделни файлове, и го вмъкваме:

<script src="scripts.js"></script>  

Браузърът:  Кешира външно въвеждания файл. 

Ако имаме някакъв евент, то скриптът свързан с него се зарежда само и чак когато се кликне на съответното място.

Не е добре да се пише JS в html но понякога се прави -> onclick=" alert(111) ";

В тага с който зареждаме JS като външен файл - нищо не се пише там. !!!

Как да стартираме JS в node.js

node script.js

Може през node  да си тестваме скрипта дали работи и как. 

Иначе трябва да добавим node в PATH; 



Синтаксисът на JS

Странностите Wat - сайт за това. 
JS

Вградените в браузъра обекти:

window - над html работи - има схема в презентацията. 

document - за текущо заредения документ. - Достъпват се всички елемевнти в DOM дървото. през document

screen 

browser -> navigator.userAgent;

Други вградени обекит Math

Math.random(); Math.floor(); Math.ceil() закръгля нагоре. 

var date = new Date();

var timer = setTimeout(func, 4000);

clearTimeout(timer);

setInterval(function, 5000);

































